{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "simple-vm",
            "metadata": {
                "description": "Name of the virtual machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ]
        },
        "adminPasswordData": {
            "type": "secureString",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "sshPublicKeyData": {
            "type": "string",
            "metadata": {
                "description": "SSH public key for the Virtual Machine."
            }
        },
        "sshKeyName": {
            "type": "string",
            "metadata": {
                "description": "SSH key name for the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v4",
            "metadata": {
                "description": "Backup data size."
            }
        },
        "dataDiskSize": {
            "type": "string",
            "metadata": {
                "description": "Install,Log and Data disk size."
            }
        },
        "secondaryDataDiskSize": {
            "type": "string",
            "metadata": {
                "description": "DDB Data disk size."
            }
        },
        "virtualNetworkNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Determines whether or not a new virtual network should be provisioned."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "VirtualNetwork",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "addressPrefixes": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address prefix of the virtual network"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Name of the subnet"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Subnet prefix of the virtual network"
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the resource group for the existing virtual network"
            }
        },
        "Publisher": {
            "type": "string",
            "defaultValue": "resf",
            "allowedValues": [
                "resf",
                "Oracle",
                "RedHat"
            ],
            "metadata": {
                "description": "The publisher of the image"
            }
        },
        "OfferName": {
            "type": "string",
            "defaultValue": "rockylinux-x86_64",
            "allowedValues": [
                "rockylinux-x86_64",
                "Oracle-Linux",
                "RHEL"
            ],
            "metadata": {
                "description": "The offer of the image"
            }
        },
        "OSVersion": {
            "type": "string",
            "defaultValue": "8-lvm",
            "allowedValues": [
                "8-lvm",
                "ol89-lvm-gen2",
                "89-gen2"
            ],
            "metadata": {
                "description": "The Linux version for the VM. This will pick a fully patched Gen2 image of this given Oracle Linux version."
            }
        },
        "RockyPlanForVm": {
            "type": "object",
            "defaultValue": {
                "name": "8-lvm",
                "publisher": "resf",
                "product": "rockylinux-x86_64"
            },
            "metadata": {
                "description": "The plan for the VM"
            }
        },
        "backupGatewayPackage": {
            "type": "string",
            "defaultValue": "https://sredownloadcenter.blob.core.windows.net/m050/LinuxCloudBackupGateway64.tar",
            "metadata": {
                "description": "Metallic Backup Gateway package download URL for linux"
            }
        },
        "companyAuthCode": {
            "type": "string",
            "metadata": {
                "description": "AuthCode from your Metallic account"
            }
        },
        "identity": {
            "type": "object",
            "defaultValue": {
                "type": "None"
            }
        },
        "availabilityZone": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Availability Zone for the VM"
            }
        },
        "DiskType": {
            "type": "string",
            "defaultValue": "PremiumV2_LRS",
            "metadata": {
                "description": "Disk type for the VM"
            }
        }
    },
    "variables": {
        "vName": "[parameters('vmName')]",
        "nicName": "[concat(parameters('vmName'), '-nic')]",
        "diskname": "[concat(parameters('vmName'), '_DataDisk_0')]",
        "secDiskName": "[concat(parameters('vmName'), '_DataDisk_1')]",
        "addressPrefixes": "[split(parameters('addressPrefixes'), ',')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "bootstrapRoleAssignmentId": "[guid(concat(resourceGroup().id, 'Reader', parameters('vmName')))]",
        "plan": "[if(equals(parameters('Publisher'),'resf'), parameters('RockyPlanForVm'),null())]"
    },
    "resources": [
        {
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2021-02-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[variables('addressPrefixes')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-05-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "name": "[variables('diskname')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2022-07-02",
            "location": "[parameters('location')]",
            "zones": "[if(equals(parameters('availabilityZone'), ''), json('null'), array(parameters('availabilityZone')))]",
            "properties": {
                "diskSizeGB": "[int(parameters('dataDiskSize'))]",
                "creationData": {
                    "createOption": "empty"
                }
            },
            "sku": {
                "name": "[parameters('DiskType')]"
            }
        },
        {
            "name": "[variables('secDiskName')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2022-07-02",
            "location": "[parameters('location')]",
            "zones": "[if(equals(parameters('availabilityZone'), ''), json('null'), array(parameters('availabilityZone')))]",
            "properties": {
                "diskSizeGB": "[int(parameters('secondaryDataDiskSize'))]",
                "creationData": {
                    "createOption": "empty"
                }
            },
            "sku": {
                "name": "[parameters('DiskType')]"
            }
        },
        {
            "condition": "[equals(parameters('authenticationType'), 'password')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-08-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "plan": "[variables('plan')]",
            "zones": "[if(equals(parameters('availabilityZone'), ''), json('null'), array(parameters('availabilityZone')))]",
            "identity": "[if(not(equals(parameters('identity').type, 'None')), parameters('identity') , json('null'))]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordData')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('Publisher')]",
                        "offer": "[parameters('OfferName')]",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "createOption": "attach",
                            "caching": "[if(contains(parameters('DiskType'), 'PremiumV2_LRS'), 'None', 'ReadOnly')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', variables('diskname'))]"
                            }
                        },
                        {
                            "lun": 1,
                            "createOption": "attach",
                            "caching": "[if(contains(parameters('DiskType'), 'PremiumV2_LRS'), 'None', 'ReadOnly')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', variables('secDiskName'))]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.Compute/disks', variables('diskname'))]",
                "[resourceId('Microsoft.Compute/disks', variables('secDiskName'))]"
            ]
        },
        {
            "condition": "[equals(parameters('authenticationType'), 'sshPublicKey')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-08-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "plan": "[variables('plan')]",
            "zones": "[if(equals(parameters('availabilityZone'), ''), json('null'), array(parameters('availabilityZone')))]",
            "identity": "[if(not(equals(parameters('identity').type, 'None')), parameters('identity') , json('null'))]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                                    "keyData": "[if(equals(parameters('sshKeyName'), ''), parameters('sshPublicKeyData'), reference(resourceId('Microsoft.Compute/sshPublicKeys', parameters('sshKeyName')), '2019-12-01').publicKey)]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('Publisher')]",
                        "offer": "[parameters('OfferName')]",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "createOption": "attach",
                            "caching": "[if(contains(parameters('DiskType'), 'PremiumV2_LRS'), 'None', 'ReadOnly')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', variables('diskname'))]"
                            }
                        },
                        {
                            "lun": 1,
                            "createOption": "attach",
                            "caching": "[if(contains(parameters('DiskType'), 'PremiumV2_LRS'), 'None', 'ReadOnly')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', variables('secDiskName'))]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.Compute/disks', variables('diskname'))]",
                "[resourceId('Microsoft.Compute/disks', variables('secDiskName'))]"
            ]
        },
        {
            "condition": "[equals(parameters('identity').type, 'SystemAssigned')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('bootstrapRoleAssignmentId')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('Reader')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('vName')), '2021-03-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('vName'),'/', 'BackupGateway')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vName'))]"
            ],
            "properties": {
                "protectedSettings": {},
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/ktejacv/azuredeploytest/refs/heads/main/AzureLinuxDeploy.sh"
                    ],
                    "commandToExecute": "[concat('chmod 0777 AzureLinuxDeploy.sh && sudo yum -y install dos2unix && sudo dos2unix AzureLinuxDeploy.sh && sudo ./AzureLinuxDeploy.sh ',parameters('backupgatewayPackage'), ' ',parameters('companyAuthCode'),' ', parameters('dataDiskSize'), ' ', parameters('secondaryDataDiskSize'),' >> linuxBackupGateway.log 2>&1')]"
                }
            }
        }
    ],
    "outputs": {
        "privateIpAddress": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
        },
        "metallicGatewayClientName": {
            "type": "string",
            "value": "[concat(parameters('vmName'), '-', reference(resourceId('Microsoft.Compute/virtualMachines', variables('vName'))).vmId)]"
        },
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}